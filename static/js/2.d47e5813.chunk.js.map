{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","dialogs","active","dialogsItems","dialogsItem","msgs","msg","addDialogDiv","Dialog","props","react_default","a","createElement","className","d","item","react_router_dom","to","id","name","Message","message","Dialogs","console","log","urlFriendId","messages","friendId","lastMsg","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","value","lastMsgFind","find","recipientId","push","_iterator","Symbol","iterator","next","done","err","return","renderSweetFromShit","map","_ref","Dialogs_Dialog_Dialog","key","userName","Dialogs_Message_Message","body","AddMsg","el","index","addMsg","maxLength150","maxLengthCreator","AddMessageFormRedux","reduxForm","form","action","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","chatMsg","filter","senderId","onClick","getDialogWithFriend","sendMessage","compose","connect","state","dialogsPage","getAllDialogs","getMessagesList","countNewMessages","withRouter","withAuthRedirect","useEffect","match","params","components_Dialogs_Dialogs","Object","assign"],"mappings":"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","file":"static/js/2.d47e5813.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Bm9B\",\"active\":\"Dialogs_active__2VT2A\",\"dialogsItems\":\"Dialogs_dialogsItems__3hiAE\",\"dialogsItem\":\"Dialogs_dialogsItem__2i0jM\",\"msgs\":\"Dialogs_msgs__1-qcK\",\"msg\":\"Dialogs_msg__1CfjL\",\"addDialogDiv\":\"Dialogs_addDialogDiv__2PCNQ\"};","import React from 'react';\r\nimport d from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className = {(props.active === 'true') ? d.item + ' ' + d.active : d.item}>\r\n            <NavLink to={'/dialogs/'+props.id}> {props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport d from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={d.msg}>{props.message}</div>\r\n    );\r\n}\r\n\r\n\r\nexport default Message;","import React, {useEffect} from 'react';\r\nimport d from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/FormValidator\";\r\nimport {getAllDialogs, getDialogWithFriend, getMessagesList, sendMessage} from \"../../redux/dialogsReducer\";\r\nimport Post from \"../Profile/MyPosts/Post/Post\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    console.log(props.urlFriendId , 'urlFriendId,');\r\n\r\n    let {dialogs, messages, urlFriendId:friendId} = props;\r\n\r\n    /*[{\r\n       hasNewMessages: false\r\n       id: 25643\r\n       lastDialogActivityDate: \"2022-10-19T17:28:12.537\"\r\n       lastUserActivityDate: \"2022-10-19T06:55:25.787\"\r\n       newMessagesCount: 0\r\n       photos: Object { small: \"https://social-network.samuraijs.com/activecontent/images/users/25643/user-small.jpg?v=1\",\r\n        large: \"https://social-network.samuraijs.com/activecontent/images/users/25643/user.jpg?v=1\" }\r\n       userName: \"MashaKustova\"}, ......]\r\n   * */\r\n\r\n\r\n\r\n\r\n    let lastMsg = [];\r\n    /* try to configure sweet from shit*/\r\n    for(let item of dialogs) {\r\n\r\n        let lastMsgFind = messages.find(message => (message.recipientId === item.id  ));\r\n        if (lastMsgFind) {\r\n            lastMsg.push({messages: lastMsgFind, dialogs: item })\r\n        }\r\n       /* lastMsg.push({['messages']: messages.find(message => (message.recipientId === item.id  )) ,\r\n                       dialogs: item })*/\r\n    }\r\n // console.log(lastMsg, 'lst msg');\r\n    const renderSweetFromShit = lastMsg.map(({messages, dialogs}) => {\r\n        return(\r\n            <div>\r\n                <Dialog key={dialogs.id} id={dialogs.id} name={dialogs.userName}/>\r\n                <Message key={messages.id} message={messages.body}/>\r\n            </div>\r\n        )\r\n    });\r\n\r\n\r\n\r\n    let dialogsElements = dialogs.map(el => {\r\n        return(\r\n            <div>\r\n                <Dialog key={el.id} id={el.id} name={el.userName}/>\r\n            </div>\r\n        )\r\n    });\r\n\r\n\r\n\r\n\r\n    let messagesElements = messages.map((message, index) => {\r\n        return (\r\n            <Message key={index} message={message.body}/>\r\n        );\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let AddMsg = props.addMsg;\r\n    let maxLength150 = maxLengthCreator(150);\r\n    const AddMessageForm = (props) => {\r\n        return(\r\n            <form action=\"\" onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field component={Textarea}\r\n                           validate={[required, maxLength150]}\r\n                           name='message'\r\n                           placeholder={'live your feed in history and let computer machine works!'}/>\r\n                </div>\r\n                <div>\r\n                    <button>Отправить Автору</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    };\r\n\r\n\r\n    const AddMessageFormRedux = reduxForm({\r\n        form: 'AddMessageForm',\r\n    })(AddMessageForm);\r\n\r\n    const onSubmit = (messages) => {\r\n        console.log(messages);\r\n        AddMsg(messages.message);\r\n        props.sendMessage(18684, messages.message);\r\n\r\n    };\r\n\r\n\r\n    if (friendId) {\r\n        let chatMsg = messages.filter(message => (message.recipientId == friendId ||  message.senderId == friendId));\r\n        return(\r\n            <div>\r\n                {chatMsg.map(el=> {\r\n                    return(\r\n                        <div key={el.id}>{el.body}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n           <div>\r\n               <div>\r\n                   <br/>\r\n                   <button onClick={()=>{getDialogWithFriend(18684)}}>Перед диалогом с Д.Ваней</button>\r\n               </div>\r\n           </div>\r\n\r\n            <div className={d.dialogs}>\r\n                <div className={d.dialogsItems}>\r\n                    {/*{dialogsElements}*/}\r\n                </div>\r\n\r\n                <div className={d.dialogsItems}>\r\n                    {renderSweetFromShit}\r\n                </div>\r\n\r\n\r\n\r\n                <div className={d.msgs}>\r\n                    {/*{messagesElements}*/}\r\n                </div>\r\n            </div>\r\n            <div className={d.addDialogDiv}>\r\n                <AddMessageFormRedux onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React, {useEffect} from 'react';\r\nimport {\r\n    addMsgActionCreator as addMsg, countNewMessages, getAllDialogs,\r\n    getDialogWithFriend,\r\n    getMessagesList,\r\n    sendMessage\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        props.getAllDialogs();\r\n        props.countNewMessages();\r\n        // props.getMessagesList(25643);\r\n        // console.log(props.match.params.friendId, 'params');\r\n    },[props.match.params.friendId]);\r\n\r\n    const urlFriendId = props.match.params.friendId;\r\n    return (\r\n        <div>\r\n            <Dialogs urlFriendId={urlFriendId} { ...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            dialogs: state.dialogsPage.dialogs,\r\n            messages: state.dialogsPage.messages,\r\n        }\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default compose(connect (mapStateToProps,\r\n    {addMsg, getAllDialogs, getDialogWithFriend, getMessagesList, sendMessage, countNewMessages}),\r\n    withRouter,\r\n    withAuthRedirect)(DialogsContainer)\r\n\r\n\r\n"],"sourceRoot":""}